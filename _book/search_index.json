[
["index.html", "Data Manipulation and Management in R 🙀 1 Heroes Are Made 1.1 Goal", " Data Manipulation and Management in R 🙀 Ning Lu Bradford Institute of Health Research (BIHR)Bradford Teaching Hospitals NHS Foundation Trust (BTHFT) Centre for Applied Education Research (CAER)Leeds Institute for Data Analytics, University of Leeds (LIDA) 2019-11-28 1 Heroes Are Made A hero is somebody who voluntarily walks into the unknown. To become a hero in R, you have to voluntarily walk into the unknown of R and the world of data science. 1.1 Goal This is a R learning and sharing platform for data manipulation and management. I will gradually build in more data science materials here. My ultimate goal is to consolidate all the learning experience and knowledge in R and share it through this platform. While the platform is open to anyone who is interested in learning data manipulation and management with R, the primary target audience is members of Bradford Institute of Health Research (BIHR), Bradford Teaching Hospitals NHS Foundation Trust (BTHFT), Centre for Applied Education Research (CAER) and Leeds Data Science Society. When you come here, I don’t expect you to have a lot of R knowledge. However, I hope that when you leave here, you’d at least learn something new in data manipulation and management through R - something would make you a hero 😎 for a while. "],
["the-end-defines-the-start.html", "2 The End Defines The Start", " 2 The End Defines The Start All beginnings are difficult. In data science, one reason making all the beginnings harder is that we just don’t know what sort of question we’re trying to answer. That’s why we often run into the dilemma of “Moving The Goalposts”. It’s not necessarily wrong but it can become frustrated if you get asked to go north first and south later. But then the answer is in fact next to you. For data manipulation and management, we should think about the end product first and do more reverse thinking than forward thinking. For example, what sort of end products do we commonly need to include in the end product? Data visualisation? Poster? Coding sharing? Data Management? Journal article write-up? The key point is that how we can improve the workflow across need end and we can easily generate and reproduce our end product. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 2.1: Here is a nice figure! "],
["documentation-bookdown-styled.html", "3 Documentation - bookdown-styled", " 3 Documentation - bookdown-styled First, choose New Project and New Directiory. Second, choose Book Project using bookdown and pick a name as well as your preferred directory. RStudio will automatically set up the Rproj as well as the folder skeleton. Third, tie the existing project with Git through the usethis package. It will re-organise the existing project folder and prepare the Git integration. &gt; usethis::use_git() ✔ Setting active project to &#39;/Users/sushicat/Dropbox/R_Me/R_DE&#39; ✔ Initialising Git repo ✔ Adding &#39;.Rhistory&#39;, &#39;.RData&#39;, &#39;.Rproj.user&#39; to &#39;.gitignore&#39; There are 15 uncommitted files: * &#39;_bookdown.yml&#39; * &#39;_output.yml&#39; * &#39;.gitignore&#39; * &#39;01-intro.Rmd&#39; * &#39;02-literature.Rmd&#39; * &#39;03-method.Rmd&#39; * &#39;04-application.Rmd&#39; * &#39;05-summary.Rmd&#39; * &#39;06-references.Rmd&#39; * &#39;book.bib&#39; * &#39;index.Rmd&#39; * &#39;preamble.tex&#39; * &#39;R_DE.Rproj&#39; * &#39;README.md&#39; * &#39;style.css&#39; Is it ok to commit them? 1: Not now 2: For sure 3: No way Selection: 2 ✔ Adding files ✔ Commit with message &#39;Initial commit&#39; ● A restart of RStudio is required to activate the Git pane Restart now? 1: Not now 2: Yup 3: Absolutely not Selection: 2 Fourth, create a GitHub repo through the usethis package and if the project name is available on the owner’s repos. When facing git protocol, choose https. &gt; usethis::use_github() ✔ Setting active project to &#39;/Users/sushicat/Dropbox/R_Me/R_DE&#39; ✔ Checking that current branch is &#39;master&#39; Which git protocol to use? (enter 0 to exit) 1: ssh &lt;-- presumes that you have set up ssh keys 2: https &lt;-- choose this if you don&#39;t have ssh keys (or don&#39;t know if you do) Selection: 2 ● Tip: To suppress this menu in future, put `options(usethis.protocol = &quot;https&quot;)` in your script or in a user- or project-level startup file, &#39;.Rprofile&#39;. Call `usethis::edit_r_profile()` to open it for editing. ● Check title and description Name: Bradford Description: Are title and description ok? 1: Yeah 2: Not now 3: Absolutely not Selection: 1 ✔ Creating GitHub repository ✔ Setting remote &#39;origin&#39; to &#39;https://github.com/dataning/R_DE.git&#39; ✔ Pushing &#39;master&#39; branch to GitHub and setting remote tracking branch ✔ Opening URL &#39;https://github.com/dataning/R_DE&#39; Fifth, create and save a random R.script in the current project. The commit and push the change of the project to your GitHub repo. You can go to your GitHub repo and check if the R script has been added. This should tell you whether your Rproj and GitHub Repo are fully synced/integrated. Sixth, go to Netlify and deploy your GitHub repo on Netlify. This will give you the ability to perform continuous deployment as well as deployment to custom domain. Type in your Rpoj’s GitHub repo name. You need to put down _book in Publish directory. "],
["elastigirl-is-here.html", "4 Elastigirl is Here", " 4 Elastigirl is Here When designing the Incredible family, Brad Bird wanted each of their superpowers to be related to their personality. He felt that as a mother, Helen was required by society to be pulled in many different directions, which led to her being given an elastic ability. The same we can say to all sort of data science projects. We are always required by different stakeholders to be pull in many different directions. For us, we have to nail down where we are and how to initiate a new project first. First of all, we find where we stand. &gt; here::here() [1] &quot;/Users/sushicat/Dropbox/R_Me/Hero_book&quot; Second, we find out what we are being surrounded. &gt; fs::dir_ls() 01-think.Rmd 02-pm.Rmd 03-load-data.Rmd 04-tidy-data.Rmd 05-bayesian.Rmd 06-Elastigirl_1.Rmd 06_Elastigirl_1.R 20-references.Rmd CreditCard Creditcard_hack.R Data Hero_book.Rproj Hero_book.log README.md _book _bookdown.yml _bookdown_files _output.yml book.bib index.Rmd packages.bib preamble.tex style.css Third, we pick somewhere (in this case - the data folder) to explore further. &gt; fs::dir_ls(&quot;Data&quot;) &gt; fs::dir_ls(&quot;Data/Subway_delays&quot;) Data/Subway_delays/Subway&amp;SRT_Logs_April_2018.xlsx Data/Subway_delays/Subway&amp;SRT_Logs_February_2018.xlsx Data/Subway_delays/Subway&amp;SRT_Logs_March_2018.xlsx Data/Subway_delays/Subway&amp;SRT_Logs_May_2018.xlsx Data/Subway_delays/Subway_&amp;_SRT_Logs_(August_2018).xlsx Data/Subway_delays/Subway_&amp;_SRT_Logs_(September_2018).xlsx Data/Subway_delays/Subway_&amp;_SRT_Logs_December_2018.xlsx Data/Subway_delays/Subway_&amp;_SRT_Logs_November_2018.xlsx Data/Subway_delays/Subway_SRT_Logs(January 2018).xlsx Data/Subway_delays/Subway_SRT_Logs(July_2018).xlsx Data/Subway_delays/Subway_SRT_Logs(June2018).xlsx Data/Subway_delays/Subway_SRT_Logs(October 2018).xlsx Alternatively, we can use the tree strcuture to show the folder. &gt; fs::dir_tree(&quot;Data/Subway_delays&quot;) Data/Subway_delays ├── Subway&amp;SRT_Logs_April_2018.xlsx ├── Subway&amp;SRT_Logs_February_2018.xlsx ├── Subway&amp;SRT_Logs_March_2018.xlsx ├── Subway&amp;SRT_Logs_May_2018.xlsx ├── Subway_&amp;_SRT_Logs_(August_2018).xlsx ├── Subway_&amp;_SRT_Logs_(September_2018).xlsx ├── Subway_&amp;_SRT_Logs_December_2018.xlsx ├── Subway_&amp;_SRT_Logs_November_2018.xlsx ├── Subway_SRT_Logs(January 2018).xlsx ├── Subway_SRT_Logs(July_2018).xlsx ├── Subway_SRT_Logs(June2018).xlsx └── Subway_SRT_Logs(October 2018).xlsx Fourth, we make a shortcut if this is where we’d like to use or come back later. &gt; fs::dir_tree(here::here(&quot;Data&quot;, &quot;Subway_delays&quot;)) /Users/goal/Dropbox/R_Me/Hero_book/Data/Subway_delays ├── Subway&amp;SRT_Logs_April_2018.xlsx ├── Subway&amp;SRT_Logs_February_2018.xlsx ├── Subway&amp;SRT_Logs_March_2018.xlsx ├── Subway&amp;SRT_Logs_May_2018.xlsx ├── Subway_&amp;_SRT_Logs_(August_2018).xlsx ├── Subway_&amp;_SRT_Logs_(September_2018).xlsx ├── Subway_&amp;_SRT_Logs_December_2018.xlsx ├── Subway_&amp;_SRT_Logs_November_2018.xlsx ├── Subway_SRT_Logs(January 2018).xlsx ├── Subway_SRT_Logs(July_2018).xlsx ├── Subway_SRT_Logs(June2018).xlsx └── Subway_SRT_Logs(October 2018).xlsx Let’s chain everything together. We present the folder with the dataset - it’s like placing the meat and veggie into an oven tray. We then put the tray to an oven called purrr and it would import all the spreadsheet files in this particular folder - it’s like an oven. Finally, we use the cleaning wipe from janitor and clean up the the column names - the ambiguity bit. delays_clean &lt;- fs::dir_ls(here::here(&quot;Data&quot;, &quot;Subway_delays&quot;)) %&gt;% purrr::map_dfr(readxl::read_excel) %&gt;% janitor::clean_names() https://sharlagelfand.netlify.com/posts/usethis-for-reporting/ "],
["shortcuts-double-tap.html", "5 Shortcuts - Double tap 5.1 Code section 5.2 Tidyverse", " 5 Shortcuts - Double tap 5.1 Code section Insert Section — Ctrl+Shift+R (Cmd+Shift+R on the Mac) Jump To — Shift+Alt+J RStudio Addin - creates boxed in titles in an Rscript devtools::install_github(&quot;ThinkR-open/littleboxes&quot;) https://riptutorial.com/r/example/13622/assignment-with----- https://style.tidyverse.org/pipes.html 5.2 Tidyverse 5.2.1 “%&gt;%” “Insert %&gt;%” inserts “%&gt;%” (Shift-ALT-m or Shift-cmd-m One is to create a new dataset and the other one is to re-assign the new data elements into an existing dataset. db &lt;- df %&gt;% select(1:3) %&gt;% filter(mpg &gt; 20, cyl == 6) df %&lt;&gt;% select(1:3) %&gt;% filter(mpg &gt; 20, cyl == 6) # Good iris %&gt;% group_by(Species) %&gt;% summarize_if(is.numeric, mean) %&gt;% ungroup() %&gt;% gather(measure, value, -Species) %&gt;% arrange(value) # Bad iris %&gt;% group_by(Species) %&gt;% summarize_all(mean) %&gt;% ungroup %&gt;% gather(measure, value, -Species) %&gt;% arrange(value) "],
["data-cleaning.html", "6 Data cleaning 6.1 dplyr 6.2 data.table", " 6 Data cleaning Some significant applications are demonstrated in this chapter. 6.1 dplyr 6.2 data.table "],
["q-in-bond-movie.html", "7 Q in Bond movie", " 7 Q in Bond movie The character Q never appears in the novels by the author Ian Fleming, where only Q and the Q Branch are mentioned;[2] although Q does appear in the novelisations by Christopher Wood, and the later novels by John Gardner and Raymond Benson who adopted Eon’s decision to combine the character with Major Boothroyd, the armourer from Dr. No. There’re a number of ways to set up Rproject and GitHub. Here we list two main approaches here. The first way is the pull way where we get both Rproject and git integrated from outside - GitHub. You use the github function from usethis package and put down (“OWNER/REPO_NAME”) and opt for https when you get asked on git protocol. &gt; usethis::create_from_github(&quot;dataning/learn_usethis&quot;) Which git protocol to use? (enter 0 to exit) 1: ssh &lt;-- presumes that you have set up ssh keys 2: https &lt;-- choose this if you don&#39;t have ssh keys (or don&#39;t know if you do) Selection: 2 ● Tip: To suppress this menu in future, put `options(usethis.protocol = &quot;https&quot;)` in your script or in a user- or project-level startup file, &#39;.Rprofile&#39;. Call `usethis::edit_r_profile()` to open it for editing. ✔ Cloning repo from &#39;https://github.com/dataning/learn_usethis.git&#39; into &#39;/Users/sushicat/Desktop/learn_usethis&#39; ✔ Setting active project to &#39;/Users/sushicat/Desktop/learn_usethis&#39; ✔ Writing &#39;learn_usethis.Rproj&#39; ✔ Adding &#39;.Rproj.user&#39; to &#39;.gitignore&#39; ✔ Opening &#39;/Users/sushicat/Desktop/learn_usethis/&#39; in new RStudio session ✔ Setting active project to &#39;&lt;no active project&gt;&#39; The second way is to imagine you’re working in a random folder and you wish to set up the Rproject &gt; library(usethis) &gt; library(here) here() starts at /Users/sushicat/Dropbox/R_Me &gt; here::here() [1] &quot;/Users/sushicat/Dropbox/R_Me&quot; &gt; path &lt;- file.path(here(), &quot;learn_usethis&quot;) create_project(path) ✔ Creating &#39;/Users/sushicat/Dropbox/R_Me/learn_usethis/&#39; ✔ Setting active project to &#39;/Users/sushicat/Dropbox/R_Me/learn_usethis&#39; ✔ Creating &#39;R/&#39; ✔ Writing &#39;learn_usethis.Rproj&#39; ✔ Adding &#39;.Rproj.user&#39; to &#39;.gitignore&#39; ✔ Opening &#39;/Users/sushicat/Dropbox/R_Me/learn_usethis/&#39; in new RStudio session ✔ Setting active project to &#39;&lt;no active project&gt;&#39; "],
["introduction-to-machine-learning.html", "8 Introduction to Machine Learning 8.1 Supervised learning 8.2 Unsupervised learning", " 8 Introduction to Machine Learning There’re two main tribes of machine learning. One tribe is called supervised learning and it’s focused on problems with predictive nature. The other one is called unsupervised learning and it’s focused on problems with descriptive nature. 8.1 Supervised learning The idea of supervised learning is that given a set of attributes or features of the objects or targets, the model is then trained to generate accurate prediction on the objects or targets. The idea of supervision refers to the fact that the target values provide a supervisory role, which means that the learning algorithm is expected to go through a set of cases where the target an its features are both presented. The learning algorithm (such as tree algorithm, neural networks) will then determine the right combination or optimisation among the features (such as feature engineering) to predict the targets. Some of the common challenges involved with supervised learning are including, - To predict the likelihood of customer churning over a certain period of time through a set of customer attributes; - To predict the likelihood of employee retention of using a range of employee and workplace attributes; - To predict the transaction price of real estates through a range of home attributes; - To predict the re-admission of the patients through a set of patient attributes and symptoms. Some of the family members are expected to exist in machine learning - Y: Outcome measure (or response, target, dependent variable) - Y is numeric. When the outcome measure is numeric / continuous outcome, this is regarded as regression challenge. For example, Average home sales price as a function of year built and total square footage. - Y is categorical. When the outcome measure is categorical outcome, this is regarded as classification challenge. For example, Did a customer redeem a coupon . X: Feature measure (or predictor, attribute, independent variable) training data testing data 8.2 Unsupervised learning In essence, unsupervised learning is concerned with identifying groups in a data set. The groups may be defined by the rows (i.e., clustering) or the columns (i.e., dimension reduction). The goal of clustering is to segment observations into similar groups based on the observed variables; for example, to divide consumers into different homogeneous groups, a process known as market segmentation. In dimension reduction, we are often concerned with reducing the number of variables in a data set. Unsupervised learning is often performed as part of an exploratory data analysis (EDA). However, the exercise tends to be more subjective, and there is no simple goal for the analysis, such as prediction of a response. - Divide consumers into different homogeneous groups so that tailored marketing strategies can be developed and deployed for each segment. - Identify groups of online shoppers with similar browsing and purchase histories, as well as items that are of particular interest to the shoppers within each group. Then an individual shopper can be preferentially shown the items in which he or she is particularly likely to be interested, based on the purchase histories of similar shoppers. - Identify products that have similar purchasing behavior so that managers can manage them as product groups. "],
["rmarkdown-with-sublime.html", "9 RMarkdown with Sublime", " 9 RMarkdown with Sublime One of the best things for R markdown is that you can write and code on the same surface. However, the interface of RStudio feels like more “brief writing” than “proper writing”. For all the writing, I prefer to do it in Sublime because it’s fast and code-integrated. The way to do is to install R-box and knitr in the Sumline. Shift + CMD + P Select R-box or knitr packages Once the installation is finished, please make sure the file type is R Markdown from the bottom right corner. You should provide a basic YAML setting for your R markdown. --- title: Lens and Movements Piloting (LAMP) author: Lawrence Ning date: March 22, 2005 output: pdf_document --- "],
["references.html", "References", " References "]
]
